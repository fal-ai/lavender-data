/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/version": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Version */
        get: operations["version_version_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Datasets */
        get: operations["get_datasets_datasets__get"];
        put?: never;
        /** Create Dataset */
        post: operations["create_dataset_datasets__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/{dataset_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Dataset */
        get: operations["get_dataset_datasets__dataset_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/{dataset_id}/preview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Preview Dataset */
        get: operations["preview_dataset_datasets__dataset_id__preview_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/{dataset_id}/shardsets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Shardset */
        post: operations["create_shardset_datasets__dataset_id__shardsets_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/{dataset_id}/shardsets/{shardset_id}/shards": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Shard */
        post: operations["create_shard_datasets__dataset_id__shardsets__shardset_id__shards_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Iterations */
        get: operations["get_iterations_iterations__get"];
        put?: never;
        /** Create Iteration */
        post: operations["create_iteration_iterations__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/{iteration_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Iteration */
        get: operations["get_iteration_iterations__iteration_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/{iteration_id}/next": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Next */
        get: operations["get_next_iterations__iteration_id__next_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/{iteration_id}/complete/{index}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Complete Index */
        post: operations["complete_index_iterations__iteration_id__complete__index__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/{iteration_id}/progress": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Progress */
        get: operations["get_progress_iterations__iteration_id__progress_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/{iteration_id}/pushback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Pushback */
        post: operations["pushback_iterations__iteration_id__pushback_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/registries/preprocessors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Preprocessors */
        get: operations["get_preprocessors_registries_preprocessors_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/registries/filters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Filters */
        get: operations["get_filters_registries_filters_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/registries/collaters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Collaters */
        get: operations["get_collaters_registries_collaters_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** CreateDatasetParams */
        CreateDatasetParams: {
            /** Name */
            name: string;
            /** Uid Column Name */
            uid_column_name?: string | null;
        };
        /** CreateIterationParams */
        CreateIterationParams: {
            /** Dataset Id */
            dataset_id: string;
            /** Shardsets */
            shardsets?: string[] | null;
            /** Filter */
            filter?: string | null;
            /** Preprocessor */
            preprocessor?: string | null;
            /** Collater */
            collater?: string | null;
            /** Shuffle */
            shuffle?: boolean | null;
            /** Shuffle Seed */
            shuffle_seed?: number | null;
            /** Shuffle Block Size */
            shuffle_block_size?: number | null;
            /** Batch Size */
            batch_size?: number | null;
            /** Replication Pg */
            replication_pg?: number[][] | null;
        };
        /** CreateShardParams */
        CreateShardParams: {
            /** Location */
            location: string;
            /** Filesize */
            filesize: number;
            /** Samples */
            samples: number;
            /** Format */
            format: string;
            /** Index */
            index: number;
            /**
             * Overwrite
             * @default false
             */
            overwrite: boolean;
        };
        /** CreateShardsetParams */
        CreateShardsetParams: {
            /** Location */
            location: string;
            /** Columns */
            columns: components["schemas"]["DatasetColumnOptions"][];
        };
        /** CreateShardsetResponse */
        CreateShardsetResponse: {
            /** Id */
            id?: string;
            /** Dataset Id */
            dataset_id: string;
            /** Location */
            location: string;
            /**
             * Shard Count
             * @default 0
             */
            shard_count: number;
            /**
             * Total Samples
             * @default 0
             */
            total_samples: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Columns */
            columns: components["schemas"]["DatasetColumnPublic"][];
        };
        /** DatasetColumnOptions */
        DatasetColumnOptions: {
            /** Name */
            name: string;
            /** Type */
            type: string;
            /** Description */
            description?: string | null;
        };
        /** DatasetColumnPublic */
        DatasetColumnPublic: {
            /** Id */
            id?: string;
            /** Dataset Id */
            dataset_id: string;
            /** Shardset Id */
            shardset_id: string;
            /** Name */
            name: string;
            /** Type */
            type: string;
            /** Description */
            description?: string | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** DatasetPublic */
        DatasetPublic: {
            /** Id */
            id?: string;
            /** Name */
            name: string;
            /**
             * Uid Column Name
             * @default uid
             */
            uid_column_name: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** GetDatasetResponse */
        GetDatasetResponse: {
            /** Id */
            id?: string;
            /** Name */
            name: string;
            /**
             * Uid Column Name
             * @default uid
             */
            uid_column_name: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Columns */
            columns: components["schemas"]["DatasetColumnPublic"][];
            /** Shardsets */
            shardsets: components["schemas"]["ShardsetPublic"][];
        };
        /** GetIterationResponse */
        GetIterationResponse: {
            /** Id */
            id?: string;
            /** Dataset Id */
            dataset_id: string;
            /**
             * Total
             * @default 0
             */
            total: number;
            /** Filter */
            filter?: string | null;
            /** Preprocessor */
            preprocessor?: string | null;
            /** Collater */
            collater?: string | null;
            /**
             * Shuffle
             * @default false
             */
            shuffle: boolean;
            /** Shuffle Seed */
            shuffle_seed?: number | null;
            /** Shuffle Block Size */
            shuffle_block_size?: number | null;
            /**
             * Batch Size
             * @default 0
             */
            batch_size: number;
            /** Replication Pg */
            replication_pg?: number[][] | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            dataset: components["schemas"]["DatasetPublic"];
            /** Shardsets */
            shardsets: components["schemas"]["ShardsetWithShards"][];
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** InProgressIndex */
        InProgressIndex: {
            /** Index */
            index: number;
            /** Rank */
            rank: number;
            /** Started At */
            started_at: number;
        };
        /** IterationPublic */
        IterationPublic: {
            /** Id */
            id?: string;
            /** Dataset Id */
            dataset_id: string;
            /**
             * Total
             * @default 0
             */
            total: number;
            /** Filter */
            filter?: string | null;
            /** Preprocessor */
            preprocessor?: string | null;
            /** Collater */
            collater?: string | null;
            /**
             * Shuffle
             * @default false
             */
            shuffle: boolean;
            /** Shuffle Seed */
            shuffle_seed?: number | null;
            /** Shuffle Block Size */
            shuffle_block_size?: number | null;
            /**
             * Batch Size
             * @default 0
             */
            batch_size: number;
            /** Replication Pg */
            replication_pg?: number[][] | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** PreviewDatasetResponse */
        PreviewDatasetResponse: {
            dataset: components["schemas"]["DatasetPublic"];
            /** Columns */
            columns: components["schemas"]["DatasetColumnPublic"][];
            /** Samples */
            samples: Record<string, never>[];
            /** Total */
            total: number;
        };
        /** Progress */
        Progress: {
            /** Total */
            total: number;
            /** Current */
            current: number;
            /** Inprogress */
            inprogress: components["schemas"]["InProgressIndex"][];
            /** Completed */
            completed: number;
            /** Filtered */
            filtered: number;
            /** Failed */
            failed: number;
        };
        /** ShardPublic */
        ShardPublic: {
            /** Id */
            id?: string;
            /** Shardset Id */
            shardset_id: string;
            /** Location */
            location: string;
            /**
             * Filesize
             * @default 0
             */
            filesize: number;
            /**
             * Samples
             * @default 0
             */
            samples: number;
            /**
             * Index
             * @default 0
             */
            index: number;
            /** Format */
            format: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** ShardsetPublic */
        ShardsetPublic: {
            /** Id */
            id?: string;
            /** Dataset Id */
            dataset_id: string;
            /** Location */
            location: string;
            /**
             * Shard Count
             * @default 0
             */
            shard_count: number;
            /**
             * Total Samples
             * @default 0
             */
            total_samples: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** ShardsetWithShards */
        ShardsetWithShards: {
            /** Id */
            id?: string;
            /** Dataset Id */
            dataset_id: string;
            /** Location */
            location: string;
            /**
             * Shard Count
             * @default 0
             */
            shard_count: number;
            /**
             * Total Samples
             * @default 0
             */
            total_samples: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Shards */
            shards: components["schemas"]["ShardPublic"][];
            /** Columns */
            columns: components["schemas"]["DatasetColumnPublic"][];
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** VersionResponse */
        VersionResponse: {
            /** Version */
            version: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    version_version_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VersionResponse"];
                };
            };
        };
    };
    get_datasets_datasets__get: {
        parameters: {
            query?: {
                name?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DatasetPublic"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_dataset_datasets__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateDatasetParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DatasetPublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_dataset_datasets__dataset_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                dataset_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetDatasetResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    preview_dataset_datasets__dataset_id__preview_get: {
        parameters: {
            query?: {
                offset?: number;
                limit?: number;
            };
            header?: never;
            path: {
                dataset_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PreviewDatasetResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_shardset_datasets__dataset_id__shardsets_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                dataset_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateShardsetParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateShardsetResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_shard_datasets__dataset_id__shardsets__shardset_id__shards_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                dataset_id: string;
                shardset_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateShardParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShardPublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_iterations_iterations__get: {
        parameters: {
            query?: {
                dataset_id?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IterationPublic"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_iteration_iterations__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateIterationParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IterationPublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_iteration_iterations__iteration_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                iteration_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetIterationResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_next_iterations__iteration_id__next_get: {
        parameters: {
            query?: {
                rank?: number;
            };
            header?: never;
            path: {
                iteration_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    complete_index_iterations__iteration_id__complete__index__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                iteration_id: string;
                index: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_progress_iterations__iteration_id__progress_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                iteration_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Progress"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    pushback_iterations__iteration_id__pushback_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                iteration_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_preprocessors_registries_preprocessors_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    get_filters_registries_filters_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    get_collaters_registries_collaters_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
}
