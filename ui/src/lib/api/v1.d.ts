/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/version": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Version */
        get: operations["version_version_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Datasets */
        get: operations["get_datasets_datasets__get"];
        put?: never;
        /** Create Dataset */
        post: operations["create_dataset_datasets__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/{dataset_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Dataset */
        get: operations["get_dataset_datasets__dataset_id__get"];
        put?: never;
        post?: never;
        /** Delete Dataset */
        delete: operations["delete_dataset_datasets__dataset_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/{dataset_id}/preview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Preview Dataset */
        get: operations["preview_dataset_datasets__dataset_id__preview_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/{dataset_id}/shardsets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Shardset */
        post: operations["create_shardset_datasets__dataset_id__shardsets_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/{dataset_id}/shardsets/{shardset_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Shardset */
        get: operations["get_shardset_datasets__dataset_id__shardsets__shardset_id__get"];
        put?: never;
        post?: never;
        /** Delete Shardset */
        delete: operations["delete_shardset_datasets__dataset_id__shardsets__shardset_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/{dataset_id}/shardsets/{shardset_id}/sync": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Sync Status */
        get: operations["get_sync_status_datasets__dataset_id__shardsets__shardset_id__sync_get"];
        put?: never;
        /** Sync Shardset */
        post: operations["sync_shardset_datasets__dataset_id__shardsets__shardset_id__sync_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datasets/{dataset_id}/preprocess": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Preprocess Dataset */
        post: operations["preprocess_dataset_datasets__dataset_id__preprocess_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Iterations */
        get: operations["get_iterations_iterations__get"];
        put?: never;
        /** Create Iteration */
        post: operations["create_iteration_iterations__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/iteration-id-from-hash": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Cluster Get Iteration Id From Hash */
        get: operations["cluster_get_iteration_id_from_hash_iterations_iteration_id_from_hash_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/{iteration_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Iteration */
        get: operations["get_iteration_iterations__iteration_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/{iteration_id}/next": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Next */
        get: operations["get_next_iterations__iteration_id__next_get"];
        put?: never;
        /** Submit Next */
        post: operations["submit_next_iterations__iteration_id__next_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/{iteration_id}/next/{cache_key}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Submitted Result */
        get: operations["get_submitted_result_iterations__iteration_id__next__cache_key__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/{iteration_id}/complete/{index}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Complete Index */
        post: operations["complete_index_iterations__iteration_id__complete__index__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/{iteration_id}/progress": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Progress */
        get: operations["get_progress_iterations__iteration_id__progress_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/{iteration_id}/pushback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Pushback */
        post: operations["pushback_iterations__iteration_id__pushback_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/{iteration_id}/state/set-cluster-sync": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Cluster Set Cluster Sync */
        post: operations["cluster_set_cluster_sync_iterations__iteration_id__state_set_cluster_sync_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/iterations/{iteration_id}/state/{operation}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Cluster Operation */
        post: operations["cluster_operation_iterations__iteration_id__state__operation__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/registries/filters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Filters */
        get: operations["get_filters_registries_filters_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/registries/categorizers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Categorizers */
        get: operations["get_categorizers_registries_categorizers_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/registries/collaters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Collaters */
        get: operations["get_collaters_registries_collaters_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/registries/preprocessors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Preprocessors */
        get: operations["get_preprocessors_registries_preprocessors_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cluster/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register */
        post: operations["register_cluster_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cluster/deregister": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Deregister */
        post: operations["deregister_cluster_deregister_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cluster/heartbeat": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Heartbeat */
        post: operations["heartbeat_cluster_heartbeat_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cluster/sync": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Sync Initial */
        post: operations["sync_initial_cluster_sync_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cluster/sync-changes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Sync Changes */
        post: operations["sync_changes_cluster_sync_changes_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cluster/nodes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Nodes */
        get: operations["get_nodes_cluster_nodes_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/background-tasks/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Tasks */
        get: operations["get_tasks_background_tasks__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/background-tasks/{task_uid}/abort": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Abort Task */
        post: operations["abort_task_background_tasks__task_uid__abort_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/files/type": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get File Type */
        get: operations["get_file_type_files_type_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/files/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get File */
        get: operations["get_file_files__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** ApiKeyPublic */
        ApiKeyPublic: {
            /** Id */
            id?: string;
            /** Note */
            note: string | null;
            /** Secret */
            secret?: string;
            /**
             * Locked
             * @default false
             */
            locked: boolean;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Expires At */
            expires_at: string | null;
            /** Last Accessed At */
            last_accessed_at: string | null;
        };
        /** CreateDatasetParams */
        CreateDatasetParams: {
            /** Name */
            name: string;
            /** Uid Column Name */
            uid_column_name?: string | null;
            /** Shardset Location */
            shardset_location?: string | null;
        };
        /** CreateIterationParams */
        CreateIterationParams: {
            /** Dataset Id */
            dataset_id: string;
            /** Shardsets */
            shardsets?: string[] | null;
            /** Filters */
            filters?: components["schemas"]["IterationFilter"][] | null;
            categorizer?: components["schemas"]["IterationCategorizer"] | null;
            collater?: components["schemas"]["IterationCollater"] | null;
            /** Preprocessors */
            preprocessors?: components["schemas"]["IterationPreprocessor"][] | null;
            /** Shuffle */
            shuffle?: boolean | null;
            /** Shuffle Seed */
            shuffle_seed?: number | null;
            /** Shuffle Block Size */
            shuffle_block_size?: number | null;
            /** Batch Size */
            batch_size?: number | null;
            /** Replication Pg */
            replication_pg?: number[][] | null;
            /** Rank */
            rank?: number | null;
            /** World Size */
            world_size?: number | null;
            /** Wait Participant Threshold */
            wait_participant_threshold?: number | null;
            /** Cluster Sync */
            cluster_sync?: boolean | null;
        };
        /** CreateShardsetParams */
        CreateShardsetParams: {
            /** Location */
            location: string;
            /** Columns */
            columns: components["schemas"]["DatasetColumnOptions"][];
        };
        /** CreateShardsetResponse */
        CreateShardsetResponse: {
            /** Id */
            id?: string;
            /** Dataset Id */
            dataset_id: string;
            /** Location */
            location: string;
            /**
             * Shard Count
             * @default 0
             */
            shard_count: number;
            /**
             * Total Samples
             * @default 0
             */
            total_samples: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Columns */
            columns: components["schemas"]["DatasetColumnPublic"][];
        };
        /** DatasetColumnOptions */
        DatasetColumnOptions: {
            /** Name */
            name: string;
            /** Type */
            type: string;
            /** Description */
            description?: string | null;
        };
        /** DatasetColumnPublic */
        DatasetColumnPublic: {
            /** Id */
            id?: string;
            /** Dataset Id */
            dataset_id: string;
            /** Shardset Id */
            shardset_id: string;
            /** Name */
            name: string;
            /** Type */
            type: string;
            /** Description */
            description?: string | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** DatasetPublic */
        DatasetPublic: {
            /** Id */
            id?: string;
            /** Name */
            name: string;
            /**
             * Uid Column Name
             * @default uid
             */
            uid_column_name: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** DeregisterParams */
        DeregisterParams: {
            /** Node Url */
            node_url: string;
        };
        /** FileType */
        FileType: {
            /** Video */
            video: boolean;
            /** Image */
            image: boolean;
        };
        /** GetDatasetResponse */
        GetDatasetResponse: {
            /** Id */
            id?: string;
            /** Name */
            name: string;
            /**
             * Uid Column Name
             * @default uid
             */
            uid_column_name: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Columns */
            columns: components["schemas"]["DatasetColumnPublic"][];
            /** Shardsets */
            shardsets: components["schemas"]["ShardsetPublic"][];
        };
        /** GetIterationResponse */
        GetIterationResponse: {
            /** Id */
            id?: string;
            /** Dataset Id */
            dataset_id: string;
            /**
             * Total
             * @default 0
             */
            total: number;
            /** Filters */
            filters?: components["schemas"]["IterationFilter"][] | null;
            categorizer?: components["schemas"]["IterationCategorizer"] | null;
            collater?: components["schemas"]["IterationCollater"] | null;
            /** Preprocessors */
            preprocessors?: components["schemas"]["IterationPreprocessor"][] | null;
            /**
             * Shuffle
             * @default false
             */
            shuffle: boolean;
            /** Shuffle Seed */
            shuffle_seed?: number | null;
            /** Shuffle Block Size */
            shuffle_block_size?: number | null;
            /**
             * Batch Size
             * @default 0
             */
            batch_size: number;
            /** Replication Pg */
            replication_pg?: number[][] | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            dataset: components["schemas"]["DatasetPublic"];
            /** Shardsets */
            shardsets: components["schemas"]["ShardsetWithShards"][];
        };
        /** GetShardsetResponse */
        GetShardsetResponse: {
            /** Id */
            id?: string;
            /** Dataset Id */
            dataset_id: string;
            /** Location */
            location: string;
            /**
             * Shard Count
             * @default 0
             */
            shard_count: number;
            /**
             * Total Samples
             * @default 0
             */
            total_samples: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Shards */
            shards: components["schemas"]["ShardPublic"][];
            /** Columns */
            columns: components["schemas"]["DatasetColumnPublic"][];
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** HeartbeatParams */
        HeartbeatParams: {
            /** Node Url */
            node_url: string;
        };
        /** InProgressIndex */
        InProgressIndex: {
            /** Index */
            index: number;
            /** Rank */
            rank: number;
            /** Started At */
            started_at: number;
        };
        /** IterationCategorizer */
        IterationCategorizer: {
            /** Name */
            name: string;
            /** Params */
            params: {
                [key: string]: unknown;
            };
        };
        /** IterationCollater */
        IterationCollater: {
            /** Name */
            name: string;
            /** Params */
            params: {
                [key: string]: unknown;
            };
        };
        /** IterationFilter */
        IterationFilter: {
            /** Name */
            name: string;
            /** Params */
            params: {
                [key: string]: unknown;
            };
        };
        /** IterationPreprocessor */
        IterationPreprocessor: {
            /** Name */
            name: string;
            /** Params */
            params: {
                [key: string]: unknown;
            };
        };
        /** IterationPublic */
        IterationPublic: {
            /** Id */
            id?: string;
            /** Dataset Id */
            dataset_id: string;
            /**
             * Total
             * @default 0
             */
            total: number;
            /** Filters */
            filters?: components["schemas"]["IterationFilter"][] | null;
            categorizer?: components["schemas"]["IterationCategorizer"] | null;
            collater?: components["schemas"]["IterationCollater"] | null;
            /** Preprocessors */
            preprocessors?: components["schemas"]["IterationPreprocessor"][] | null;
            /**
             * Shuffle
             * @default false
             */
            shuffle: boolean;
            /** Shuffle Seed */
            shuffle_seed?: number | null;
            /** Shuffle Block Size */
            shuffle_block_size?: number | null;
            /**
             * Batch Size
             * @default 0
             */
            batch_size: number;
            /** Replication Pg */
            replication_pg?: number[][] | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** IterationShardsetLink */
        IterationShardsetLink: {
            /** Id */
            id?: string;
            /** Iteration Id */
            iteration_id: string;
            /** Shardset Id */
            shardset_id: string;
        };
        /** NodeStatus */
        NodeStatus: {
            /** Node Url */
            node_url: string;
            /** Last Heartbeat */
            last_heartbeat: number | null;
        };
        /** PreprocessDatasetParams */
        PreprocessDatasetParams: {
            /** Shardset Location */
            shardset_location: string;
            /** Source Shardset Ids */
            source_shardset_ids?: string[] | null;
            /** Source Columns */
            source_columns?: string[] | null;
            collater?: components["schemas"]["IterationCollater"] | null;
            /** Preprocessors */
            preprocessors: components["schemas"]["IterationPreprocessor"][];
            /** Export Columns */
            export_columns: string[];
            /** Batch Size */
            batch_size: number;
            /**
             * Overwrite
             * @default false
             */
            overwrite: boolean;
            /**
             * Drop Last
             * @default false
             */
            drop_last: boolean;
        };
        /** PreprocessDatasetResponse */
        PreprocessDatasetResponse: {
            /** Task Id */
            task_id: string;
        };
        /** PreviewDatasetResponse */
        PreviewDatasetResponse: {
            dataset: components["schemas"]["DatasetPublic"];
            /** Columns */
            columns: components["schemas"]["DatasetColumnPublic"][];
            /** Samples */
            samples: {
                [key: string]: unknown;
            }[];
            /** Total */
            total: number;
        };
        /** Progress */
        Progress: {
            /** Total */
            total: number;
            /** Current */
            current: number;
            /** Inprogress */
            inprogress: components["schemas"]["InProgressIndex"][];
            /** Completed */
            completed: number;
            /** Filtered */
            filtered: number;
            /** Failed */
            failed: number;
        };
        /** RegisterParams */
        RegisterParams: {
            /** Node Url */
            node_url: string;
        };
        /** ShardPublic */
        ShardPublic: {
            /** Id */
            id?: string;
            /** Shardset Id */
            shardset_id: string;
            /** Location */
            location: string;
            /**
             * Filesize
             * @default 0
             */
            filesize: number;
            /**
             * Samples
             * @default 0
             */
            samples: number;
            /**
             * Index
             * @default 0
             */
            index: number;
            /** Format */
            format: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** ShardsetPublic */
        ShardsetPublic: {
            /** Id */
            id?: string;
            /** Dataset Id */
            dataset_id: string;
            /** Location */
            location: string;
            /**
             * Shard Count
             * @default 0
             */
            shard_count: number;
            /**
             * Total Samples
             * @default 0
             */
            total_samples: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** ShardsetWithShards */
        ShardsetWithShards: {
            /** Id */
            id?: string;
            /** Dataset Id */
            dataset_id: string;
            /** Location */
            location: string;
            /**
             * Shard Count
             * @default 0
             */
            shard_count: number;
            /**
             * Total Samples
             * @default 0
             */
            total_samples: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Shards */
            shards: components["schemas"]["ShardPublic"][];
            /** Columns */
            columns: components["schemas"]["DatasetColumnPublic"][];
        };
        /** SubmitNextResponse */
        SubmitNextResponse: {
            /** Cache Key */
            cache_key: string;
        };
        /** SyncParams */
        SyncParams: {
            /** Datasets */
            datasets: components["schemas"]["DatasetPublic"][];
            /** Dataset Columns */
            dataset_columns: components["schemas"]["DatasetColumnPublic"][];
            /** Shardsets */
            shardsets: components["schemas"]["ShardsetPublic"][];
            /** Shards */
            shards: components["schemas"]["ShardPublic"][];
            /** Iterations */
            iterations: components["schemas"]["IterationPublic"][];
            /** Iteration Shardset Links */
            iteration_shardset_links: components["schemas"]["IterationShardsetLink"][];
            /** Api Keys */
            api_keys: components["schemas"]["ApiKeyPublic"][];
        };
        /** SyncShardsetParams */
        SyncShardsetParams: {
            /**
             * Overwrite
             * @default false
             */
            overwrite: boolean;
        };
        /** TaskMetadata */
        TaskMetadata: {
            /** Uid */
            uid: string;
            /** Name */
            name: string;
            /**
             * Start Time
             * Format: date-time
             */
            start_time: string;
            /** Kwargs */
            kwargs: {
                [key: string]: unknown;
            };
            status?: components["schemas"]["TaskStatus"] | null;
        };
        /** TaskStatus */
        TaskStatus: {
            /** Status */
            status: string;
            /** Current */
            current: number;
            /** Total */
            total: number;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** VersionResponse */
        VersionResponse: {
            /** Version */
            version: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    version_version_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VersionResponse"];
                };
            };
        };
    };
    get_datasets_datasets__get: {
        parameters: {
            query?: {
                name?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DatasetPublic"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_dataset_datasets__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateDatasetParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DatasetPublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_dataset_datasets__dataset_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                dataset_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetDatasetResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_dataset_datasets__dataset_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                dataset_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DatasetPublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    preview_dataset_datasets__dataset_id__preview_get: {
        parameters: {
            query?: {
                offset?: number;
                limit?: number;
            };
            header?: never;
            path: {
                dataset_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PreviewDatasetResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_shardset_datasets__dataset_id__shardsets_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                dataset_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateShardsetParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateShardsetResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_shardset_datasets__dataset_id__shardsets__shardset_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                dataset_id: string;
                shardset_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetShardsetResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_shardset_datasets__dataset_id__shardsets__shardset_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                dataset_id: string;
                shardset_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShardsetPublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_sync_status_datasets__dataset_id__shardsets__shardset_id__sync_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                dataset_id: string;
                shardset_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TaskStatus"] | null;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    sync_shardset_datasets__dataset_id__shardsets__shardset_id__sync_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                dataset_id: string;
                shardset_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SyncShardsetParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetShardsetResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    preprocess_dataset_datasets__dataset_id__preprocess_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                dataset_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PreprocessDatasetParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PreprocessDatasetResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_iterations_iterations__get: {
        parameters: {
            query?: {
                dataset_id?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IterationPublic"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_iteration_iterations__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateIterationParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IterationPublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    cluster_get_iteration_id_from_hash_iterations_iteration_id_from_hash_get: {
        parameters: {
            query: {
                iteration_hash: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_iteration_iterations__iteration_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                iteration_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetIterationResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_next_iterations__iteration_id__next_get: {
        parameters: {
            query?: {
                rank?: number;
                no_cache?: boolean;
                max_retry_count?: number;
            };
            header?: never;
            path: {
                iteration_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    submit_next_iterations__iteration_id__next_post: {
        parameters: {
            query?: {
                rank?: number;
                no_cache?: boolean;
                max_retry_count?: number;
            };
            header?: never;
            path: {
                iteration_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SubmitNextResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_submitted_result_iterations__iteration_id__next__cache_key__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                iteration_id: string;
                cache_key: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    complete_index_iterations__iteration_id__complete__index__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                iteration_id: string;
                index: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_progress_iterations__iteration_id__progress_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                iteration_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Progress"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    pushback_iterations__iteration_id__pushback_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                iteration_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    cluster_set_cluster_sync_iterations__iteration_id__state_set_cluster_sync_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                iteration_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    cluster_operation_iterations__iteration_id__state__operation__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                iteration_id: string;
                operation: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    [key: string]: unknown;
                };
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_filters_registries_filters_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    get_categorizers_registries_categorizers_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    get_collaters_registries_collaters_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    get_preprocessors_registries_preprocessors_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    register_cluster_register_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegisterParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    deregister_cluster_deregister_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeregisterParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    heartbeat_cluster_heartbeat_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["HeartbeatParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    sync_initial_cluster_sync_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SyncParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    sync_changes_cluster_sync_changes_post: {
        parameters: {
            query?: {
                delete?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SyncParams"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_nodes_cluster_nodes_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NodeStatus"][];
                };
            };
        };
    };
    get_tasks_background_tasks__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TaskMetadata"][];
                };
            };
        };
    };
    abort_task_background_tasks__task_uid__abort_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                task_uid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_file_type_files_type_get: {
        parameters: {
            query: {
                file_url: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FileType"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_file_files__get: {
        parameters: {
            query: {
                file_url: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
